// <auto-generated />
using System;
using Blog.Api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Api.Migrations
{
    [DbContext(typeof(BlogInfoContext))]
    [Migration("20231125152556_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.24");

            modelBuilder.Entity("Blog.Api.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is the first comment",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(580),
                            PostId = 1,
                            Title = "First Comment"
                        },
                        new
                        {
                            Id = 2,
                            Content = "This is the second comment",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(580),
                            PostId = 1,
                            Title = "Second Comment"
                        },
                        new
                        {
                            Id = 3,
                            Content = "This is the first comment",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(580),
                            PostId = 2,
                            Title = "First Comment"
                        },
                        new
                        {
                            Id = 4,
                            Content = "This is the second comment",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(590),
                            PostId = 2,
                            Title = "Second Comment"
                        },
                        new
                        {
                            Id = 5,
                            Content = "This is the first comment",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(590),
                            PostId = 3,
                            Title = "First Comment"
                        },
                        new
                        {
                            Id = 6,
                            Content = "This is the second comment",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(590),
                            PostId = 3,
                            Title = "Second Comment"
                        });
                });

            modelBuilder.Entity("Blog.Api.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is the first post",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(510),
                            Title = "First Post"
                        },
                        new
                        {
                            Id = 2,
                            Content = "This is the second post",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(520),
                            Title = "Second Post"
                        },
                        new
                        {
                            Id = 3,
                            Content = "This is the third post",
                            CreationDate = new DateTime(2023, 11, 25, 16, 25, 56, 108, DateTimeKind.Local).AddTicks(520),
                            Title = "Third Post"
                        });
                });

            modelBuilder.Entity("Blog.Api.Entities.Comment", b =>
                {
                    b.HasOne("Blog.Api.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Blog.Api.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
